#pragma once
#include <cstdint>

enum color {red, green, dark_blue, yellow, light_blue, purple, orange};
enum piece {Z, S, J, O, I, T, L};
enum KeyCode : int32_t {
	Unknown = -1,
	Space = 32,
	Apostrophe = 39,
	Comma = 44,
	Minus = 45,
	Period = 46,
	Slash = 47,
	Num0 = 48,
	Num1 = 49,
	Num2 = 50,
	Num3 = 51,
	Num4 = 52,
	Num5 = 53,
	Num6 = 54,
	Num7 = 55,
	Num8 = 56,
	Num9 = 57,
	Semicolon = 59,
	Equal = 61,
	A = 65,
	B = 66,
	C = 67,
	D = 68,
	E = 69,
	F = 70,
	G = 71,
	H = 72,
	i = 73,
	j = 74,
	K = 75,
	l = 76,
	M = 77,
	N = 78,
	o = 79,
	P = 80,
	Q = 81,
	R = 82,
	s = 83,
	t = 84,
	U = 85,
	V = 86,
	W = 87,
	X = 88,
	Y = 89,
	z = 90,
	LeftBracket = 91,
	Backslash = 92,
	RightBracket = 93,
	GraveAccent = 96,
	World1 = 161,
	World2 = 162,
	Escape = 256,
	Enter = 257,
	Tab = 258,
	Backspace = 259,
	Insert = 260,
	Delete = 261,
	Right = 262,
	Left = 263,
	Down = 264,
	Up = 265,
	PageUp = 266,
	PageDown = 267,
	Home = 268,
	End = 269,
	CapsLock = 280,
	ScrollLock = 281,
	NumLock = 282,
	PrintScreen = 283,
	Pause = 284,
	F1 = 290,
	F2 = 291,
	F3 = 292,
	F4 = 293,
	F5 = 294,
	F6 = 295,
	F7 = 296,
	F8 = 297,
	F9 = 298,
	F10 = 299,
	F11 = 300,
	F12 = 301,
	F13 = 302,
	F14 = 303,
	F15 = 304,
	F16 = 305,
	F17 = 306,
	F18 = 307,
	F19 = 308,
	F20 = 309,
	F21 = 310,
	F22 = 311,
	F23 = 312,
	F24 = 313,
	F25 = 314,
	Keypad0 = 320,
	Keypad1 = 321,
	Keypad2 = 322,
	Keypad3 = 323,
	Keypad4 = 324,
	Keypad5 = 325,
	Keypad6 = 326,
	Keypad7 = 327,
	Keypad8 = 328,
	Keypad9 = 329,
	KeypadDecimal = 330,
	KeypadDivide = 331,
	KeypadMultiply = 332,
	KeypadSubtract = 333,
	KeypadAdd = 334,
	KeypadEnter = 335,
	KeypadEqual = 336,
	LeftShift = 340,
	LeftControl = 341,
	LeftAlt = 342,
	LeftSuper = 343,
	RightShift = 344,
	RightControl = 345,
	RightAlt = 346,
	RightSuper = 347,
	Menu = 348
};

constexpr const char* const LUT44To96[] { 
  "Comma",
  "Minus",
  "Period",
  "Slash",
  "Num0",
  "Num1",
  "Num2",
  "Num3",
  "Num4",
  "Num5",
  "Num6",
  "Num7",
  "Num8",
  "Num9",
  "Invalid",
  "Semicolon",
  "Invalid",
  "Equal",
  "Invalid",
  "Invalid",
  "Invalid",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "LeftBracket",
  "Backslash",
  "RightBracket",
  "Invalid",
  "Invalid",
  "GraveAccent" };

constexpr const char* const LUT256To348[]{ "Escape",
  "Enter",
  "Tab",
  "Backspace",
  "Insert",
  "Delete",
  "Right",
  "Left",
  "Down",
  "Up",
  "PageUp",
  "PageDown",
  "Home",
  "End",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "CapsLock",
  "ScrollLock",
  "NumLock",
  "PrintScreen",
  "Pause",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "F1",
  "F2",
  "F3",
  "F4",
  "F5",
  "F6",
  "F7",
  "F8",
  "F9",
  "F10",
  "F11",
  "F12",
  "F13",
  "F14",
  "F15",
  "F16",
  "F17",
  "F18",
  "F19",
  "F20",
  "F21",
  "F22",
  "F23",
  "F24",
  "F25",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Invalid",
  "Keypad0",
  "Keypad1",
  "Keypad2",
  "Keypad3",
  "Keypad4",
  "Keypad5",
  "Keypad6",
  "Keypad7",
  "Keypad8",
  "Keypad9",
  "KeypadDecimal",
  "KeypadDivide",
  "KeypadMultiply",
  "KeypadSubtract",
  "KeypadAdd",
  "KeypadEnter",
  "KeypadEqual",
  "Invalid",
  "Invalid",
  "Invalid",
  "LeftShift",
  "LeftControl",
  "LeftAlt",
  "LeftSuper",
  "RightShift",
  "RightControl",
  "RightAlt",
  "RightSuper",
  "Menu" };

constexpr const char* KeyCodeToString(KeyCode keycode) noexcept
{
	if (keycode == 32) { return "Space"; } // Common key, don't treat as an unlikely scenario

	if (keycode >= 44 && keycode <= 96) [[likely]] { return LUT44To96[keycode - 44]; }

	if (keycode >= 256 && keycode <= 348) [[likely]] { return LUT256To348[keycode - 256]; }

		// Unlikely scenario where the keycode didn't fall inside one of the two lookup tables
		switch (keycode)
		{
		case 39: return "Apostrophe";
		case 161: return "World1";
		case 162: return "Wordl2";
		default: return "Unknown";
		}
}